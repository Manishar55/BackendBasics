
Link ➡➡ click ➡➡ OS will give options for default browser ➡➡ (eg) chosen Chrome ➡➡ 
browser dont understand link so through Domain name resolution we gwet IP address (of server) ➡➡ 
connection established via TCP connection (by using 3 way handshake) ➡➡ Get request 


📝HTTP requests:

GET -> Retrieve/fetch
PUT -> Update
POST -> Submit
DELETE -> Delete

creating serever using Express.js
📝Express.js :

✍️ Express is a framework used for creating server site application
✍️Express.js is a lightweight and flexible Node.js web application framework that provides a robust set of 
features for building web and mobile applications and APIs.

✍️Express is a minimal and flexible Node.js web application framework that provides a robust set of features for 
web and mobile applications such as routing, middleware, and template rendering.

✍️With Express.js, developers can quickly create server-side applications that handle HTTP requests, process data, and
respond with dynamic content or data from a database. It also supports a wide range of middleware that can be used 
to add functionality, such as authentication, compression, logging, and more.

✍️It is designed for building single-page, multi-page, and hybrid web applications. 


📝creating serever using Express.js:
1. create folder -> cd folder name
2. npm i -y (for paclage.json)
3. npm i express (install express in the project, nodemodules)
4. npm i mongoose
5. npm i dotenv
6. npm i nodemon
7. server.js

📝npm i nodemon => install nodemone => no need to run again and again 

📝RUN:
✍️node server.js  OR  npm start


📝For scripts:
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js"
  },


📝mongoDB

✍️MongoDB is a document-oriented, open-source database program that is used for storing and retrieving data.

✍️It is a NoSQL database, which means that it does not use a fixed schema and does not rely on tables to organize 
data, unlike a traditional relational database. Instead, MongoDB stores data in a format called BSON (binary JSON),
which allows for more flexibility and scalability when working with large amounts of data.

✍️MongoDB is often used for web and mobile applications, real-time analytics, and big data processing.



📝POSTMAN
✍️Postman is an API platform that simplifies the API lifecycle, enabling developers to design, build, test,
 document, and collaborate on APIs, ultimately streamlining the process of creating and using APIs



📝mongoose
✍️ it is used to link sever and DB 
✍️ Mongoose is a tool that helps developers work with MongoDB databases in a more structured and intuitive way, 
especially within the context of Node.js applications. 
✍️Mongoose is an Object Data Modeling (ODM) library for MongoDB, a popular NoSQL database, that simplifies 
interactions with MongoDB by providing a schema-based solution for modeling application data in Node.js.


📝connecting frontend and backend

✍️ MongoDB atlas login
✍️top left -> dropdown ->new Project
✍️enter project name and create project
✍️ click create cluster
✍️select free
✍️create deployment
✍️save username and password
✍️click finish and close
✍️ click connect
✍️click compass
✍️copy connection string and replace password with the saved password

📝

✍️
✍️
✍️
✍️
✍️
✍️
✍️
✍️

📝

✍️
✍️
✍️
✍️
✍️
✍️


✍️
✍️
✍️
✍️
✍️
✍️
✍️
✍️
✍️
✍️